'''2) შექმენით ფუნქცია რომელსაც გადაეცემა name პარამეტრად და ბეჭდავს შემდეგ ტექსტს "Hello [name] გამოიძახეთ ფუნქცია და გადაეცით არგუმენტად თქვენი სახელი, შეინახეთ ის ცვლადში და დაბეჭდეთ ცვლადი, კომენტარებით ახსენით რა მოხდა, ასევე ახენით რა არის return და რით განსხვავდება print-ისგან'''

def welcome (name):
    print(f"Hello {name}")

greeting = welcome('Barbare')
print(greeting)
# ტერმინალში შედეგად გამოვიდა: Hello Barbare , ის ეროგორც მოსალოდნელი იყო. მაგრამ ქვეშ კიდევ ერთი შედეგი გამოვიდა: none                რატომ მოხდა ასე?                                                                                                                        ჩვენ როცა ფუნქციას ვქმნიდით, დავწერეთ ასეთი რამ: print(f"Hello {name}"). ჩვენ ფუნქციას შედეგი გამოვატანინეთ print- ით   მაგრამ ძირითადად ჩვენ იმას თუ რა უნდა გამვიდეს ფუნქციის შედეგად ვწერთ return -ით. მაგრამ როცა ჩვენ ფუნქციაში არ ვწერთ return- ს, ავტომატურად იქ იწერება return : none. ამიტომ ფუნქციის შედეგთან ერთად გამოვიდა none. ამიტომაცაა კარგი რომ print() -ის მაგივრად გამოვიყენოთ return რადგან ეს none   არ დაბრუნდეს.
# რა განსხვავებაა print- სა და return-ს შორის??
# print-ს ტერმინალში გამოაქვს შედეგები და ვიყენებთ მასინ როცა რაიმეს შედეგის ნახვა ან გადამოწმება გვინდა
# return კი უბრალოდ ფუნქციებისთვის იყენება და მისი შედეგი ტერმინალში არ გამოდუს, ამისთვის მას print სჭირდება. 
